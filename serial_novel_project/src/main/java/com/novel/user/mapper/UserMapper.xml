<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http:/mybatis.org/dtd/mybatis-3-mapper.dtd">

	
<mapper namespace="com.novel.user.mapper.UserMapper">
	
	
	<!-- ■ 해당 유저 정보 가져오기 -->
	
		<!-- ● 1. ResultMap : UserVO
			      1)기존 컬럼명과 vo의 변수명이 다르거나 2) 구조가 달라질 때(ex. 컬럼 하나에 List<xxVO>로 들어오는 경우) 사용 -->
		<resultMap type="com.novel.user.domain.UserVO" id="userMap">
			<id property="user_id" column="user_id"/>
			<result property="user_num" column="user_num"/>
			<result property="user_id" column="user_id"/>
			<result property="user_pw" column="user_pw"/>
			<result property="user_name" column="user_name"/>
			<result property="user_pnum" column="user_pnum"/>
			<result property="user_email" column="user_email"/>
			<result property="user_coin" column="user_coin"/>
			<result property="user_coupon" column="user_coupon"/>
			<result property="user_rdate" column="user_rdate"/>
			<result property="user_auth_mdate" column="user_auth_mdate"/>
			<result property="user_enabled" column="user_enabled"/>
			<collection property="authList" resultMap="authMap"/>			
		</resultMap>
		
		<!-- ● 2. ResultMap :AuthVO -->
		<resultMap type="com.novel.user.domain.AuthVO" id="authMap">
			<result property="auth_num" column="auth_num"/>
			<result property="user_id" column="user_id"/>
			<result property="auth" column="auth"/>
		</resultMap>
		
		<!-- ● 3. SELECT 쿼리문 -->
		<select id="getUserInfo" resultMap="userMap">
			SELECT
		        u.user_num, u.user_id, u.user_pw, u.user_name, u.user_pnum, u.user_email, u.user_coin, u.user_coupon, u.user_rdate, u.user_auth_mdate, u.user_enabled,
		        a.auth
   			FROM
        		user_tbl u 
        	LEFT OUTER JOIN 
        		auth_tbl a 
        	on 
        		u.user_id = a.user_id
    		WHERE
        		u.user_id = #{user_id}
		</select>
		
		<select id="getUserInfo2" resultMap="userMap">
			SELECT * FROM user_tbl WHERE user_id = #{user_id}
		</select>
		
		
		
		
		<!-- ■ 회원가입 로직 - 회원 정보 기입-->
		<insert id="insertMemberTbl">
			INSERT INTO user_Tbl(user_num, user_id, user_pw, user_name, user_pnum, user_email)
				VALUES
			(user_num.nextval, #{user_id}, #{user_pw}, #{user_name}, #{user_pnum}, #{user_email})
		</insert>
	
	
		<!-- ■ 회원가입 로직 - 권한 목록 기입-->
		<!-- collection : List<VO>의 변수명 / item : 변수명 / separator : 각 사이클과 사이클 사이에 넣을 문자(한칸 띄워줘야 에러 안남. 콤마를 넣는 경우도) -->
		<update id="insertMemberAuth">
			INSERT ALL
				<foreach collection="authList" item="item" separator=" ">
					INTO auth_tbl(auth_num, user_id, auth)
						VALUES
					(auth_num.nextval, #{item.user_id}, #{item.auth})
				</foreach>
			SELECT *
				FROM DUAL
		</update>
		
		<!-- ■ 회원수정 로직 -->
		<update id="updateMember">
		UPDATE user_tbl SET user_id =#{user_id}, user_pw=#{user_pw}, user_name=#{user_name},
		user_pnum=#{user_phone}, user_email=#{user_email},user_mdate=sysdate 
		WHERE user_num = #{user_num}
		</update>
		
		<!-- ■ 선호작 리스트 유료 무료 관계없이 뽑아오기 -->
		<select id="selectFavList" resultType="com.novel.user.domain.FavorVO">
			
			select * from
        		(select * from favorite_tbl where user_num=
        		(select user_num from user_tbl where user_id= #{user_id})) ft
    				LEFT JOIN
        				novel_tbl nt
    							on ft.novel_num = nt.novel_num
		</select>
		
		<!-- ■ 선호작이 무료소설일 경우에 무료 소설 디테일을 받아옴 (유료소설은 paid쪽에 이미 있어서 따로 안만듬) -->
		<select id="selectFreeList" resultType="com.novel.free.domain.FreeNovelVO">
			
			select * from free_tbl where novel_num = #{novelNum}
		</select>
		
		<!-- ■ 선호작 등록 -->
		<insert id="insertFav">
			INSERT INTO favorite_tbl VALUES (fav_num.nextval,#{novel_num},#{user_num})
		</insert>
		<!-- ■ 선호작 삭제 -->
		<delete id="deleteFav">
			DELETE FROM favorite_tbl WHERE novel_num = #{novel_num} and user_num = #{user_num}
		</delete>
		
		
		<!-- ■ 무료 책갈피 리스트 받아오기.-->
		<select id="selectBookmarkList" resultType="com.novel.user.domain.BookmarkVO">
		select * from
        		(select * from free_bookmark_tbl where user_num=
        		(select user_num from user_tbl where user_id= #{user_id})) bt
    				LEFT JOIN
        				free_tbl ft
    							on bt.fbm_free_num = ft.free_num
		</select>
		
		<!-- ■ 무료 책갈피 목록 디테일 받아오기(내용). -->
		<select id="selectBookmarkDetail" resultType="com.novel.user.domain.BookmarkVO">
		select f.* , b.fbm_num from free_bookmark_tbl b Inner Join free_tbl f ON f.free_num = b.fbm_free_num  
		where free_num =#{free_num} and user_num = #{user_num}
		</select>
		
		<!-- ■ 무료 책갈피 등록 -->
		<insert id="insertFreeBookmark">
			INSERT INTO free_bookmark_tbl VALUES (fbm_num.nextval,#{free_num},#{user_num})
		</insert>
		<!-- ■ 무료 책갈피 삭제 -->
		<delete id="deleteFreeBookmark">
			DELETE FROM free_bookmark_tbl WHERE fbm_free_num = #{free_num} and user_num = #{user_num}
		</delete>
		
		<!-- ■ 무료 책갈피 삭제(글삭제시 트랜잭션용) -->
		<delete id="deleteAllFreeBookmark">
			DELETE FROM free_bookmark_tbl WHERE fbm_free_num = #{free_num}
		</delete>
		
		
		<!-- ■ 회원정보 수정을 하려면 그에 딸려있는 모든 유저정보를 먼저 수정해야함. -->
		<!--  1. auth_tbl     --> 
<update id="updateAuthUser">
	update auth_tbl set user_id =#{user_id} where user_id =(select user_id from user_tbl where user_num=#{user_num})
</update>
		
		<!-- 2. novel_tbl     -->
<update id="updateNovelUser">
	update novel_tbl set user_id =#{user_id} where user_id =(select user_id from user_tbl where user_num=#{user_num})                         
</update>
		
		<!-- 3. enroll_tbl    -->
<update id="updateEnrollUser">
	update enroll_tbl set user_id =#{user_id} where user_id =(select user_id from user_tbl where user_num=#{user_num})                         
</update>
		
		<!-- 4. paid_repl_tbl -->
<update id="updatePaidReplUser">
	update paid_repl_tbl set prepl_writer=#{user_id} where user_id =(select user_id from user_tbl where user_num=#{user_num})                         
</update>
		
		<!-- 5. free_repl_tbl -->
<update id="updateFreeReplUser">
	update free_repl_tbl set user_id =#{user_id} where user_id =(select user_id from user_tbl where user_num=#{user_num})                         
</update>
		
		<!-- 6. torec_tbl     -->
<update id="updateTorecUser">
	update torec_tbl set user_id =#{user_id} where user_id =(select user_id from user_tbl where user_num=#{user_num})                         
</update>		




</mapper>
