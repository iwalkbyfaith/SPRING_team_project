<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http:/mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="com.novel.paid.mapper.PaidNovelMapper">
	
	
			<sql id="search">
				<if test="searchType != null">
					<if test="searchType == 't'.toString()">
						(Title like '%'||#{keyword}||'%') AND
					</if>
					<if test="searchType == 'c'.toString()">
						(Content like '%'||#{keyword}||'%') AND
					</if>
					<if test="searchType == 'w'.toString()">
						(Writer like '%'||#{keyword}||'%') AND
					</if>
					<if test="searchType == 'tc'.toString()">
						((Title like '%'||#{keyword}||'%')
							or
						(Content like '%'||#{keyword}||'%')) AND
					</if>
					<if test="searchType == 'cw'.toString()">
						((Content like '%'||#{keyword}||'%')
							or
						(Writer like '%'||#{keyword}||'%')) AND
					</if>
					<if test="searchType == 'tcw'.toString()">
						((Title like '%'||#{keyword}||'%')
							or
						(Content like '%'||#{keyword}||'%')
							or
						(Writer like '%'||#{keyword}||'%')) AND
					</if>
				</if>	
			</sql>
		
		<!-- 유료소설 전체 리스트 -->
		<select id="getList" resultType="com.novel.paid.domain.PaidNovelVO">
			
			<![CDATA[
				SELECT * FROM
					(SELECT /*+ INDEX_DESC(paid_tbl pk_paid) */
					ROWNUM rn, paid_tbl.* FROM paid_tbl WHERE 
				]]>
				
				<include refid="search"></include>
				
			<![CDATA[		
				ROWNUM <= #{pageEnd})
					WHERE rn > #{pageStart}
			]]>
					 
		</select>
		
		<!-- paid_tbl의 전체 글 갯수 -->
		<select id="countPageNum" resultType="int">
			<![CDATA[
				SELECT COUNT(*) FROM paid_tbl WHERE
			]]>
			
				<include refid="search"></include>
				
			<![CDATA[
				paid_num > 0
			]]>
		</select>
		
		<!-- Novel과 Paid join (상세정보) -->
		<select id="select" resultType="com.novel.paid.domain.PaidNovelInnerVO">
			SELECT * FROM novel_tbl n inner join paid_tbl p 
						on n.#{novel_num} = p.#{novel_num}
		</select>
		
		<!-- 유료소설 등록 -->
		<insert id="insert">
			INSERT INTO paid_tbl (paid_num, novel_num, paid_snum, paid_title, paid_content) values
                        (paid_num.nextval, #{novel_num}, #{paid_snum}, #{paid_title}, #{paid_content})
		</insert>
		
		<!-- 삭제 -->
		<delete id="delete">
			DELETE FROM paid_tbl WHERE paid_num = #{paid_num}
		</delete>
		
		<!-- 수정 -->
		<update id="update">
			UPDATE paid_tbl 
				SET
			paid_title = #{paid_title}, paid_content = #{paid_content}, paid_mdate = SYSDATE, paid_price = #{paid_price} 
				WHERE paid_num = #{paid_num}
		</update>
		
	</mapper>