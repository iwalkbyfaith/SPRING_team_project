<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd">


	<!-- ■ 빈 관리 -->
	
		<!-- ● 커스텀 핸들러) 액세스 거부 -->
		<bean id="customAccessDenied" class="com.novel.security.CustomAccessDeniedHandler"/>
		
		<!-- ● 커스텀 핸들러) 로그인 성공 -->
		<bean id="customLoginSuccess" class="com.novel.security.CustomLoginSuccessHandler"/>
		
		<!-- ● 비밀번호 암호화를 위한 BcryptPasswordEncoder 사용  -->
		<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
		
		<!-- ● UserMapper의 데이터를 스프링 시큐리티에서 처리할 수 있도록 커스터마이징(교안11의 63) -->
		<bean id="customUserDetailsService" class="com.novel.security.CustomUserDetailsService"/>



	<!-- ■ security:http -->
	
		<security:http>
			
			<!-- ● /secu/all 접속시 모든 유저에게 접근 허용 -->
			<security:intercept-url pattern="/secu/all" access="permitAll"/>
			
				<!-- ■ 스프링 인터셉터 어노테이션 처리를 위한 주석처리(교안12의 22)
				 ● /secu/user는 user에게만 접근 허용 + 나중에 admin을 추가하면서 admin도 가능 
				<security:intercept-url pattern="/secu/user" access="hasRole('ROLE_USER')"/>
			
				 ● /secu/admin은 admin만 접근 허용 (교안11의 20쪽) 
				<security:intercept-url pattern="/secu/freewriter" access="hasRole('ROLE_FREE_WRITER')"/>
				<security:intercept-url pattern="/secu/paidwriter" access="hasRole('ROLE_PAID_WRITER')"/>
				<security:intercept-url pattern="/secu/admin" access="hasRole('ROLE_ADMIN')"/>
			 	-->
			
			<!-- ● 커스텀 로그인 페이지
			       커스텀 핸들러와 연결) 로그인 성공 -->
			<security:form-login login-page="/customLogin"
				authentication-success-handler-ref="customLoginSuccess"/>
			
			<!-- ● 커스텀 핸들러와 연결) 액세스 거부 -->
			<security:access-denied-handler ref="customAccessDenied"/>
			
			<!-- ● 커스텀 로그아웃 (로그아웃시 세션 파기) -->
			<security:logout logout-url="/customLogout" invalidate-session="true"
							  delete-cookies="remember-me, JSESSIONID"/>
			
			<!-- ● 자동 로그인 -->
			<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
							 <!-- ㄴ dataSource에 세팅된 DB를 사용할 것이라는 뜻 --> <!-- ㄴ 60(초) x 60 x 24 x 7 : 일주일 -->
			
		</security:http>
	
	
	
	
	<!-- ■ security:authentication-manager -->
	
		<security:authentication-manager>
			<security:authentication-provider user-service-ref="customUserDetailsService"><!-- ◀ CustomUserDetailsService를 사용해 로그인하도록 바꾸기-->
						 
			 	<!-- ● 비밀번호 암호화를 위해 BcryptPasswordEncoder 사용 (교안11의 50)-->
				<security:password-encoder ref="bcryptPasswordEncoder"/>
				
			</security:authentication-provider>
		</security:authentication-manager>


</beans>
